name: Build Container Images

on:
  workflow_dispatch:
    inputs:
      service_config:
        description: 'Service configuration'
        required: true
        default: 'cranker'
        type: choice
        options:
          - api-mainnet
          - api-testnet
          - writer-service-mainnet
          - writer-service-testnet
          - steward-writer-service-mainnet
          - steward-writer-service-testnet
          - cranker

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-container:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
              
    - name: Determine Docker target
      id: target
      run: |
        case "${{ github.event.inputs.service_config }}" in
          "api-mainnet"|"api-testnet")
            echo "target=api" >> $GITHUB_OUTPUT
            echo "service=api" >> $GITHUB_OUTPUT
            ;;
          "writer-service-mainnet"|"writer-service-testnet")
            echo "target=writer-service" >> $GITHUB_OUTPUT
            echo "service=writer-service" >> $GITHUB_OUTPUT
            ;;
          "steward-writer-service-mainnet"|"steward-writer-service-testnet")
            echo "target=steward-writer-service" >> $GITHUB_OUTPUT
            echo "service=steward-writer-service" >> $GITHUB_OUTPUT
            ;;
          "cranker")
            echo "target=cranker" >> $GITHUB_OUTPUT
            echo "service=cranker" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ github.event.inputs.service_config }}-{{sha}}
          type=raw,value=${{ github.event.inputs.service_config }}-latest

    - name: Build and push container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: ${{ steps.target.outputs.target }}
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max